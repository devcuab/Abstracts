	Понятие ошибки и программирования
	Что такое отладка?
	Отладка и тестирование программ - это не одно  тоже. Тестирование помогает проверить, работает ли программа правильно, а отладка - это исправление уже найденных проблем. Обычно отладкой занимается разработчик или тестировщик-автоматизатор.
	Ошибка (bug) - Это несоответствие работы программы ожидаемому результату, возникшие из-за неправильных действий программиста, некорректных данных или внешних факторов

	Методы отладки и ошибок
	1)Ручная отладка
		*Пошаговое выполнение программы.
		*использование точек остановки.
		*Использование точек breakpoint.
	2)Логирование(Logging)
		*Запись хода выполнения программы в журнал (log-файл).
		*Используется для поиска ошибок, возникающих на реальных данных.
	3)Модульное тестирование (Unit testing)
		*Проверка отдельных функций или модулей программы.
		*Позволяет выявить ошибки на ранних этапах.
	4)Использовать asserts
		*Проверка предположений в коде.
		*Если условие не выполняется - программа сообщает об ошибке.
	5)Профилированние и анализ кода
		*Анализ работы программы для поиска узких мест и неправильного поведения.
		*Использование статистического анализа (SonarQube, ESList).
	
	ТАБЛИЦА:
	Вид ошибки: Синтаксическая, Логическая, Время выполнения, Компиляция, Сематическая.Интерфейса
	Краткое описание:Нарушение правил языка программирования,Код работает но результат неверный, Ошибка появляется при работепрограммы, Ошибка на этапе компиляции, Логика задачи нарушена, но код синтаксически верен, Ошибки во время взаимодействия модулей или с пользователем.
	Примеры: Пропущенная скобка, неправильная формула, неверное условие if, деление на ноль., выход за границы массива, несовпадение типов данных. отсутствие метода.площадь а+б вместо а*б, неверные параметры функций,
	Как обнаружить:Компилятор\Интерпритатор сообщает об ошибке, тестирование., анализ алгоритма, Логирование., отладка, обработка исключений Сообщение компилятора.Проверка требований.,тестирование, интеграционное тестирование, анализ кода.
	
	White/Black/Grey box - тестирование
	Для того чтобы лучше понимать подходы тестирования ПО, нужно знать виды и типы тестирования. Самым высоким уровнем в иерархии подходов к тестам будет понятие типа, которое может охватить сразу нескольких техник тестирования. Тоесть к отдому типу может соответствовать несколько его видов.

	Black box: Summary:Мы знаем, как устроена тестируемая система. Тестирование методом чёрного ящика - техника тестирования, основанная на работе исключительно с внешними интерфейсами тестируемой системы. Согласно ISTQB, тестирование яёрного ящика - это:
		*тестирование, как функциональное так ин нефункциональное, не предполагающее знание внутреннего устройства компонента или системы.
		*тест дизайн, основанный на технике чёрного ящика - процедура написанная или выбора тест-кейсов на основе анализа функциональной или нефункциональной спецификации компонента или системы без знания её внут. устройства
Техника чёрного щика применима на всех уровнях тестирования (от модульного до приемочного)
	Техники тест-дизайна, основанные на использовании чёрного ящика, включают:
		*классы эквиалентности;
		*анализ граничных значений;
		*Таблицы решений;
		*диаграммы изменения состояния;
		*тестирование всех пар;
	Преимущества:
	1)тестирование производиться с позиции конечного пользователя и может помочь обнаружить неточности и противоречия спецификации.
	2)тестировщику нет необхадимости хнать язык програмирования и углубляться в особенности реализации программы.
	3)тестирование может производиться специалистам, независимо от отдале разработки, что помогает избежать предвзятого отношения.
	4)Можно начинать писать тест-кейсы, как только готова спецификация.

	White Box
Summary:Нам известны все детали реализации тестируемой программы.
	Тестирование методом белого ящика (открытого стеклянного ящыка) - метод тестирования ПО, заключается в том, что внутренняя структура\устройство\реализация известна. Мы выбираем входные значения, основываясь на знании кода.Также мы знаем результат. Знание всех особенностейи и её реализации обязательны для этой техники. Тестирование белого ящика - углубление во внутреннее устройство системы за пределы внешних интерфейсов.
	Согласно ISTQB:ТЕстирование белого ящика это-
		*тестирование, основанное на анализе внетренней структуры компонента или системы.
		*тест-дизайн, основанный на технике белого ящика - процедура написания или выбора тест-кейсов на основе анализа внут. устройства системы или компонента.
	Пример:Тестировщик, изучает реализацию, определяет все предусмотренные и не предусмотренные вводы и сравнивает файтический результат выполнения программы с ожидаемым.
	Преимущества:
	1)тестирование может производиться на ранних этпапх.
	2)можно провести более тщательное тестирование с покрытием большого количества путей выполнения программы
	Недостатки:
	1)для выполнения теста необхадимо большее количество знаний.
	2)при использовании автоматизации тестирования на этом уровне поддержка скриптов может оказаться достаточно накладной, если программа часто изменяется.

	Grey Box
Summary:Нам известны только некоторые особенности реализации тестируемой системы.
	Тестируемы методом серого ящика - метод тестирования ПО, который предпологает комбинацию White box и Black Box подходов. То есть внутреннее устройство программы нам известно лишь частично. Эту технику тестирования также называют методом полупрозачного ящика: что-то мы видим, а что-то - нет.
	Пример:Тестировщик изучает код программы с тем, чтобы лучше понимать принцип её работы и изучить возможные пути её выполнения. Техника серого ящика применима на разных уровнях, но, главным образом, применяется на интеграционном уровне для проверки до проверки взаимодействия разных модулей программы

	Статическое и динамическое тестирование
	1)статистеческое тестирование - тип тестирование, который предпологает, что програмный код во время тестирования не будет выполняться. При этом сам тестирование может быть ручным, так и автоматизированным.
Статическое тестирование начинается на ранних этапах жизненнго цикла ПО и является частью верификации. Дляя этого иногда даже не нужен компьютер, например при проверке требований. Болшинство статических техник могут быть для тестирования любых форм документации, выключая вычитку кода, инспекцию проектной документации, функциональьной спецификации и требований. 
	Виды статического тестирования:
		*вычитка исходного кода программы.
		*проверка требований.

	2)динамическое тестирование
	Динмаическое тестирование - тип тестирования, который предпологает запуск программы. Таким образом, анализируя поведение программы во время её работы. Для выполнения динамического кода необзадимо, чтобы тестируемый програмынй код был написан, скомпилирован и запущен. При этом может выполняться проверка внешних параметров работы программы: загрузка процессора, использование памяти, время отклика и т.д.
	Динамичное тестирование является частью процесса валидации ПО.
	Кроме того, динамическое тестирование может включать разные подвиды, каждый из которых зависит от:
		*Доступа к коду
		*Уровня тестирования(модульное, интеграционное, системное и приемочное тестирование)
		*Сферы использования приложения (функциональное, нагрузрчное, тестирование безопасности и пр.)
	
	Ручное и автоматизированное
	При ручном тестировании (manual testing) тестировщик вручную выполняют тесты, не исполльзуя никаких средств автоматизации. РУчное тестирование самый низкоуровневый и простой тип тестирования, не требующий большого количества дополнителный знаний. Тем не менее, перед тем как автоматизировать тестированиелюбого приложения , необхадимо сначала выполнить серию тестов вручную. Мануальное тестирование требует значительных училий, но буз него мы не сможем убедиться в том, что возможно ли автоматизация в принципе. Один из фундаментальных принципов тестирования гласит:  100% автоматизация невозможна. Поэтому, ручное тестирование необхадимость.
	Автоматизарованное тестирование (Automation testing) предпологает использованние специального ПО для контроля выполнения тестов и сравнения ожидаемого фактического автоматизации часто повторяющейся программы, но необхадимые для максимизации тестового покрытия, задачи. Мануальное тестирование может недостаточно эффективно находить некоторые классы ошибок. Полсе создания автоматизироанных тестов, их можно заупустить снова, причём запускаться и выполняться они будут точно и быстро.
	Существует несколько основыных видов автоматизированного тестирования:
		*Автоматизация тестирования кода (Code-drive testing) Тестирования на уровне програмных модулей. классов модулей и библеотек.
		*Автоматизация тестирования графическогопользовательского интерфейса: Специальная программа позволяет генерировать пользовательские события - нажатия клавиш, клик мышкой и отследивание реакции программы на действия: соответствует ли она спецификации.
		*Автоматизация тестирования API: тестирование ПО интерфейса. Тестируются интерфейсы, предназначенные для ызаимодействия
	Для составления автоматизированных тестов QA - специалист должен уметь програмировать. Автоматические тесты - это полноценные программы.

	Виды тестирования
	Можно условно разделить на следующие группы
	1.Функциональные
	2.Нефункциональные
	3.Связанные с изменениями
	
	Тестирование безопасности - это стратегия тестирования, используемая для проверки безопасности системы, а текже для аналицаа рисков, связанных с обеспечением целостного подхода.

	Нефункциональные виды тестирования
	это описыает тесты, необхадимые для определения характеристик ПО, которые могут быть измерены с различными величинами. В целом, это тестирование величинами. В целом это тестирование того, как система работает
	
	Тестирование установки
	Оно направленно на проверку успешной инсталяции и найтройки, а также на обновление или удаление ПО.
	




	

	

