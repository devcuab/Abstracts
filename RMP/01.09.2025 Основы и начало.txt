2) Кроссплатформенность разработка (One Codebase for All)
Dart + Flutter ( Современный лидер от Google)
	Для чего он нужен:Dart - это язык, а Flutter - фреймворк на его основе. Flutter не использует нативные компоненты, а рисует интерфейс сам, что обеспечивает одинаковый внешний вид и высокую производительность на iOS и Andriod
	что на нём создано?: Google pay, Alibaba, BMW, my BMW app, eBAY, mototrs, nubank, wechat

JAVA SCript/TypeScript + React NAtive
	для чего он нужен: позволяет веб-разработчикам использовать их знания (Java Script) для создания мобильных приложений. React Native оборачивает код в нативные компоненты, что даёт приложению более "нативный" вид и ощущения.
	что создано на нём: FaceBook Instagram
	Discord, Skype, Bloomberg
	Shopify


2. Кросс-платформенная разработка (One Codebase for All) 
	С# + .NET MAUI (От Microsoft)
		для чего он нужен: Позволяет разработчикам C# создавать
 		кроссплатформенные прилодения. Сильно интегрирован с 				экосистемой Micerosoft (Azure, Visual Studio).
Что такое фреймворк?
	Фреймворк (Framework) - это каркас иои основа для создания программного 	обеспечения. Если представить, что разработчик приложения - это строительство 	дома, то:
		*Язык програмирования (Kotlin, Swift, SwiftUI) - это готовые фундамент, несущие стены, перекрытия и даже проектная документация. Вы строите дом

	Фреймворки для мобильной разработки (2025г.) (Их можно разделить на две большие категории)
	1. Нативные фреймворки ( для конкретной ОС)
Эти феймворки созданы компаниями владельцами операционных систем 
	a) Для iOS:
	SwiftUI: (основной в 2025г) Высокая произв. интеграц. с ОС. Единый код
	UIKit: Более старый и исперативный фреймворк. Вы описываете последовательность действий для создания интерфейса
	


		